import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class LinkedListNode<T> {
    T data;
    LinkedListNode<T> next;
    
    public LinkedListNode(T data) {
        this.data = data;
    }
}

class Solution {

	public static LinkedListNode<Integer> evenAfterOdd(LinkedListNode<Integer> head) {
		
        LinkedListNode<Integer> head1= null,head2 =null, tail1 = null,tail2 = null;
        
        if(head == null || head.next==null){
            return head;
        }
        
        while(head!=null){
            
            if(head.data % 2 == 0){
                if(head2==null){
                    head2 = head;
                    tail2 = head;
                    
                }else{
                    tail2.next = head;
                    tail2 = head;

                }
            }else{
                if(head1 == null){
                    head1 = head;
                    tail1 = head;
                   
                }else{
                    tail1.next = head;
                    tail1 = head;
                 
                }
                
            }
            head = head.next;
        }
        
        if(head1!=null){
           if(tail2!=null){
            tail1.next = head2;
               tail2.next=null;
        	return head1;
        }else{
             return head1;
        }
        }else{
            return head2;
        }
        
        
        
        
	}
}


public class EvenAfterOdd {
    
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    
    public static LinkedListNode<Integer> takeInput() throws IOException {
        LinkedListNode<Integer> head = null, tail = null;

        String[] datas = br.readLine().trim().split("\\s");

        int i = 0;
        while(i < datas.length && !datas[i].equals("-1")) {
            int data = Integer.parseInt(datas[i]);
            LinkedListNode<Integer> newNode = new LinkedListNode<Integer>(data);
            if(head == null) {
                head = newNode;
                tail = newNode;
            }
            else {
                tail.next = newNode;
                tail = newNode;
            }
            i += 1;
        }

        return head;
    }
    
    public static void print(LinkedListNode<Integer> head){
        while(head != null) {
            System.out.print(head.data + " ");
            head = head.next;
        }
        
        System.out.println();
    }
    
    public static void main(String[] args) throws NumberFormatException, IOException {
        
        int t = Integer.parseInt(br.readLine().trim());

        while (t > 0) {

            LinkedListNode<Integer> head = takeInput(); 

            LinkedListNode<Integer> newHead = Solution.evenAfterOdd(head);
            print(newHead);

            t -= 1;
        }

    }
}
