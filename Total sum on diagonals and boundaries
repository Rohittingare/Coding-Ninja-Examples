import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Runner {


    public static void totalSum(int[][] mat) {
		int n = mat.length;
        int sum =0;
        int start = 0; 
        int endDiag = n-2;
        int end = n-1;
        for(int i=0; i<n;i++){
            if(i==0){
                for(int j=0; j<mat[i].length;j++){
                   sum+=mat[i][j];//first row 
                }
            }
            else if(i<n-1){
                start =i;
                if(start == endDiag){
                    sum=sum+ mat[i][0]+mat[i][start]+mat[i][end];
                }else
                sum=sum+ mat[i][0]+mat[i][start]+mat[i][endDiag]+mat[i][end];
            	endDiag--;
            }
            else{
                for(int j=0;j<n;j++){
                    sum+=mat[i][j];
                }
            }
            
        }
        System.out.println(sum);

	}




    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    
    public static int[][] take2DInput() throws IOException {
        int n = Integer.parseInt(br.readLine().trim());

        if (n == 0) {
            return new int[0][0];
        }


        int[][] mat = new int[n][n];

        for (int row = 0; row < n; row++) {
            String[] strNums; 
            strNums = br.readLine().trim().split("\\s");
            
            for (int col = 0; col < n; col++) {
                mat[row][col] = Integer.parseInt(strNums[col]);
            }
        }

        return mat;
    }


    public static void main(String[] args) throws NumberFormatException, IOException {
        int t = Integer.parseInt(br.readLine().trim());

        while(t > 0) {

            int[][] mat = take2DInput();

            Solution.totalSum(mat);
            System.out.println();

            t -= 1;
        }
    }
}
